const assert = require("assert");
const { rules } = require("./index");

[
  {
    input: {},
    expected: { result: false, message: `commit scope should be set` },
  },
  {
    input: { type: "build", scope: "compiler" },
    expected: {
      result: false,
      message: `commit message with type "build" should have scope = (ðŸ”¨) or scope = (myscope ðŸ”¨)`,
    },
  },
  {
    input: { type: "docs", scope: "compiler ðŸŽ‰" },
    expected: {
      result: false,
      message: `commit message with type "docs" and scope "compiler" should begin docs(compiler ðŸ“š)`,
    },
  },
  {
    input: { type: "docs", scope: "compiler  ðŸ“š" },
    expected: {
      result: false,
      message: `commit message with type "docs" should have scope = (ðŸ“š) or scope = (myscope ðŸ“š)`,
    },
  },
  {
    input: { type: "docs", scope: "two words ðŸ“š" },
    expected: {
      result: false,
      message: `commit message with type "docs" should have scope = (ðŸ“š) or scope = (myscope ðŸ“š)`,
    },
  },
  {
    input: { type: "docs", scope: "compiler ðŸ“š" },
    expected: {
      result: true,
    },
  },
  {
    input: { type: "chore", scope: "release ðŸ“š" },
    expected: {
      result: false,
      message: `commit message with type "chore" and scope "release" should begin chore(release ðŸ”–)`,
    },
  },
  {
    input: { type: "chore", scope: "release ðŸ”–" },
    expected: {
      result: true,
    },
  },
  {
    input: { type: "chore", scope: "dependencies ðŸ“¦" },
    expected: {
      result: true,
    },
  },
].forEach(({ input, expected }) => {
  const [result, message] = rules["@phenomnomnominal/scopes"](input);
  assert.equal(result, expected.result);
  if (!result) {
    assert.equal(message, expected.message);
  }
});
